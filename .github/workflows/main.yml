name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GIT_REPO_NAME: FullStack-Blogging-App
  GIT_USER_NAME: swastik7777
  token: ${{ secrets.GITHUB_TOKEN }}
  SONAR_PROJECT_KEY: blogging-app
  SONAR_PROJECT_NAME: blogging-app
  DOCKER_IMAGE: swastik2929/blogger-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Maven
      uses: s4u/setup-maven-action@v1.11.0
      with:
        maven-version: '3.8.7'

    - name: Compile Code
      run: mvn compile

    - name: Run Tests
      run: mvn test

    - name: Trivy FS Scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: fs
        format: table
        output: fs.html
        severity: HIGH,CRITICAL

    - name: Set up SonarScanner
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
          -Dsonar.projectName=${{ env.SONAR_PROJECT_NAME }}
          -Dsonar.java.binaries=target
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Build Project
      run: mvn package

    - name: Deploy Artifact (Maven Deploy)
      run: mvn deploy
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: docker build -t ${{ env.DOCKER_IMAGE }}:${{ github.run_number }} .

    - name: Trivy Image Scan
      run: trivy image --format table -o blogger-app-${{ github.run_number }}.html ${{ env.DOCKER_IMAGE }}:${{ github.run_number }}

    - name: Push Docker Image
      run: docker push ${{ env.DOCKER_IMAGE }}:${{ github.run_number }}

    - name: Update Deployment YAML and Push
      run: |
        git config user.name "${{ env.GIT_USER_NAME }}"
        git config user.email "swastikgomase.sae.comp@gmail.com"

        cd k8s
        imageTag=${{ env.DOCKER_IMAGE }}:${{ github.run_number }}

        awk -v imageTag="$imageTag" '/image:/ {$0 = "          image: " imageTag} {print}' deployment-service.yaml > temp.yaml && mv temp.yaml deployment-service.yaml

        echo "Updating deployment-service.yaml with image tag: $imageTag"

        git add deployment-service.yaml
        git commit -m "Update deployment image to version ${{ github.run_number }}"
        git push https://${{ secrets.GH_TOKEN }}@github.com/${{ env.GIT_USER_NAME }}/${{ env.GIT_REPO_NAME }} HEAD:main
