name: CI-CD Blogging App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: swastik2929/blogger-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Git Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      # Compile
      - name: Compile code
        run: mvn compile

      # Test
      - name: Run Tests
        run: mvn test

      # Trivy FS Scan
      - name: Trivy FS Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          format: table
          output: fs.html
          exit-code: 0
          ignore-unfixed: true

      # SonarQube Analysis (Maven)
      - name: SonarQube Scan (Maven)
  run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
       -Dsonar.projectKey=blogging-app \
       -Dsonar.projectName=blogging-app \
       -Dsonar.host.url=$SONAR_HOST_URL \
       -Dsonar.login=$SONAR_TOKEN
  env:
    SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Build JAR
      - name: Build package
        run: mvn package -DskipTests

      # Publish Artifact to Maven Repo
      - name: Publish Artifact
        run: mvn deploy -s .mvn/settings.xml
        env:
          GITHUB_TOKEN-1: ${{ secrets.MY_GIT_TOKEN }}

      # Docker Build
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ github.run_number }} .

      # Trivy Image Scan
      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ github.run_number }}
          format: table
          output: blogger-app-${{ github.run_number }}.html
          exit-code: 0
          ignore-unfixed: true

      # Push Docker Image
      - name: Push Docker image
        run: docker push ${{ env.IMAGE_NAME }}:${{ github.run_number }}

      # Update Deployment YAML
      - name: Update deployment file
        run: |
          git config user.email "swastikgomase.sae.comp@gmail.com"
          git config user.name "swastik7777"

          imageTag=${{ env.IMAGE_NAME }}:${{ github.run_number }}

          awk -v imageTag="$imageTag" '/image:/ {$0 = "          image: " imageTag} {print}' k8s/deployment-service.yaml > k8s/temp.yaml && mv k8s/temp.yaml k8s/deployment-service.yaml

          echo "Updating deployment-service.yaml with image tag: $imageTag"

          git add k8s/deployment-service.yaml
          git commit -m "Update deployment image to version ${{ github.run_number }}"
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/swastik7777/FullStack-Blogging-App HEAD:main
